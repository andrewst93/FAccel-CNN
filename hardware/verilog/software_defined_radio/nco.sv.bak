module nco # (
            parameter                   WIDTHA = 64, // width accumulator
            parameter                   WIDTH = 16, // width sine/cosine output
            parameter                   WIDTHT = 11, // with of table (4 * RAM depth),
            parameter                   FILE = "quarter_wave_512.hex"
)
(
    input   logic                       clock,
    input   logic                       clock_sreset,
    input   logic [WIDTHA-1:0]          phase_increment,
    output  logic signed [WIDTH-1:0]    sine_out,
    output  logic signed [WIDTH-1:0]    cosine_out
);

            logic [WIDTHA-1:0]          phase_accumulator;

    always_ff @ (posedge clock) begin
        if (clock_sreset) begin 
            phase_accumulator <= {WIDTH{1'b0}};
        end
        else begin
            phase_accumulator <= phase_accumulator + phase_increment;
        end
    end
            
    sine_cosine                         # (
                                            .WIDTH(WIDTH),
                                            .WIDTHT(WIDTHT),
                                            .FILE(FILE)
                                        )
                                        lut (
                                            .clock(clock),
                                            .clock_sreset(clock_sreset),
                                            .theta(phase_accumulator[WIDTHA-1:WIDTHA-WIDTHT]),
                                            .sine(sine_out),
                                            .cosine(cosine_out)
                                        );

endmodule
